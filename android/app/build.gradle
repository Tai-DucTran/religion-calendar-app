plugins {
    id "com.android.application" version "7.3.0"
    id "kotlin-android" version "1.7.10"
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services' version "4.3.15"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.gmaildeve.taitran.religion_calendar_app"
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.gmaildeve.taitran.religion_calendar_app"
        minSdkVersion 23
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }

    flavorDimensions "default"
    productFlavors {
        production {
            dimension "default"
            resValue "string", "app_name", "Religion App"
            applicationIdSuffix ""
        }
        staging {
            dimension "default"
            resValue "string", "app_name", "Stg Religion App"
            applicationIdSuffix ".stg"
        }
        developmennt {
            dimension "default"
            resValue "string", "app_name", "Religion App"
            applicationIdSuffix ".dev"
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:32.7.2')
    
    // Use base Firebase Analytics instead of ktx version
    implementation 'com.google.firebase:firebase-analytics'
    // Remove analytics-ktx since it's causing version conflicts
    // implementation 'com.google.firebase:firebase-analytics-ktx'
    
    implementation 'com.google.firebase:firebase-appcheck-playintegrity'
    implementation 'com.google.firebase:firebase-appcheck-debug'
    implementation 'androidx.multidex:multidex:2.0.1'
}